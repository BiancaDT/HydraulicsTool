import glob
from PyPDF2 import PdfFileReader, PdfFileWriter
from fpdf import FPDF
import pandas as pd
from tkinter import *
import tkinter as tk
from tkinter import ttk



#Read the file
df = pd.read_excel(r'C:/Users/BIDN/PycharmProjects/Hydraulics.xlsx', sheet_name='Third proposal', skipinitialspace=True)

#Drop all NaN values
df = df.dropna(axis=0, how='all', thresh=None, subset=None, inplace=False)
df.reset_index(drop=False)

PartnoList = df['Part no']
MakersList = df['Maker choice']

#setting the labels to look for

list_of_HPS_types = ['HPS gear driven','HPS gear driven - THS2','HPS el driven']

#Groups by column for group, if it has at least 1 item
groups_parts = df.groupby(['Group', 'Category'])
groupsList = []
groupGroup = []

listGRoupmakers = df['Maker choice'].groupby(df['Group']).apply(list).reset_index(name='Brands')
listMakers = listGRoupmakers['Brands'].tolist()

#---------GUI-----------

root = tk.Tk()
root.resizable(False, False)
root.title("Hydraulics GUI")

root.iconbitmap('C:/Users/BIDN/PycharmProjects/Hydraulics/LogoMAN.ico')
#root.tk.call('wm', 'iconphoto', root._w, tk.PhotoImage(file='C:/Users/BIDN/PycharmProjects/Hydraulics/LogoMAN.png'))
#root.iconphoto(True, tk.PhotoImage(file='C:/Users/BIDN/PycharmProjects/Hydraulics/LogoMAN.png'))

categories = df['Category'].unique().tolist()

for (i, item) in enumerate(categories):
    if "HPS" in item:
        categories[i] = "HPS"

categories = pd.DataFrame(categories, columns =['Category'])
categories = categories['Category'].unique().tolist()

#Dictionary to dynamically declare variables

d={}
listIndexVariables = []
listVariables = []
XVariables = []
for x in range(len(listMakers)):
        d["Var{0}".format(x)] = tk.StringVar()
        XVariables.append(d)

for key, value in d.items():
        temp = [key, value]
        listVariables.append(temp[1])

r = 0
answers = []
list_of_widgets = []
for c in categories:
    ttk.Label(text=c, relief=tk.RIDGE, width=15).grid(row=r,column=0)
    categoriesParts = ttk.Combobox(root, textvariable = listVariables[r], values=listMakers[r],width=10, state="readonly")
    categoriesParts.grid(row=r,column=1)
    categoriesParts.set('')
    list_of_widgets.append(categoriesParts)
    r = r + 1

partNoList = []

#########
    #############Input TC

# Label texts
lbl = Label(root, text="Input T.C. number", font=("Arial Bold", 12))
lbl.grid(column=4, row=0)

# Input text
txt = Entry(root, width=10)
txt.grid(column=4, row=1)
txt.focus()
res = txt.get()


#Buttons
def clickedTC():
    res = "T.C. nr. " + txt.get()
    lbl.configure(text=res)
    print("res:", res)

    #######################
    #Title file for PDF

    #Create front page
    pdf = FPDF('L')
        # Add a page
    pdf.add_page()
        # set style and size of font
        # that you want in the pdf
    pdf.set_font("Arial", 'B', size=20)
        # create a cell
    pdf.cell(200, 30, txt=res,
            ln=3, align='C')
        # add another cell
    pdf.cell(200, 30, txt="Input from TC field",
            ln=5, align='C')
        # save the pdf with name .pdf
    pdf.output("FrontPage.pdf")

    #PDF merge
paths = []

def merge_pdfs(paths, output):
    for x in range(len(listMakers)):
        answers.append(listVariables[x].get())
    indexMakerChoice = df.index[df['Maker choice'].isin(answers)].tolist()
    print("indexMakerChoice", indexMakerChoice)
    print("answers", answers)
    listPartNo = df.loc[indexMakerChoice, 'Part no'].tolist()
    print("listPartNo", listPartNo)
    #for file_name in os.listdir('C:/Users/BIDN/PycharmProjects'):
    patterns = [s + '.pdf' for s in listPartNo]
    paths.append("FrontPage.pdf")
    for pattern in patterns:
        for fn in glob.glob(pattern):
            paths.append(fn)
    print("paths", paths)
    answers.clear()


    ##############PDFS
    pdf_writer = PdfFileWriter()

    for path in paths:
        pdf_reader = PdfFileReader(path)
        for page in range(pdf_reader.getNumPages()):
            # Add each page to the writer object
            pdf_writer.addPage(pdf_reader.getPage(page))
    # Write out the merged PDF
    with open(output, 'wb') as out:
        pdf_writer.write(out)
    #pdf_writer.addPage()
    # Clear the files list after configuring
    paths.clear()

def clearComboBox():
    for widget in list_of_widgets:
        widget.set('')


browseButton_Excel = tk.Button(text='Print Config', command=lambda : merge_pdfs(paths, output='HydraulicPartsMerged.pdf'), bg='green', fg='white')
browseButton_Excel.grid(column=1, row=50)
browseButton_Clear = tk.Button(text='Clear Config', command=clearComboBox, bg='green', fg='white')
browseButton_Clear.grid(column=4, row=50)
answers.clear()


#Text input
btn = Button(root, text="Save", command=clickedTC)
btn.grid(column=4, row=2)

mainloop()
