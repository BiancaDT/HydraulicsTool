import pandas as pd
from pandas import *
from numpy import *

#Read the file
df = pd.read_excel(r'C:/Users/BIDN/PycharmProjects/Hydraulics.xlsx', sheet_name='Third proposal', skipinitialspace=True)

#Drop all NaN values
df = df.dropna(axis=0, how='all', thresh=None, subset=None, inplace=False)
df.reset_index(drop=True)

PartnoList = df['Part no']

#setting the labels to look for
#filters = ['ME-Filter']
#hps_gear = ['HPS gear driven']
#hps_ths2 = ['HPS gear driven - THS2']
#hps_el = ['HPS el driven']
#safety = ['Safety / akkumulator block']
#exh_valve = ['HCU / Exhaust valve type']

# selecting rows based on condition
#rslt_filters = df[df['Category'].isin(filters)]
#rslt_gear = df[df['Category'].isin(hps_gear)]
#rslt_ths2r = df[df['Category'].isin(hps_ths2)]
#rslt_elgear = df[df['Category'].isin(hps_el)]
#rslt_safety = df[df['Category'].isin(safety)]
#rslt_exh_valve = df[df['Category'].isin(exh_valve)]

#lists of makers
#assign to drodown menu
#Maker_filter = rslt_filters['Maker choice'].tolist()

#Maker_gear = rslt_gear['Maker choice'].tolist()
#Maker_ths = rslt_ths2r['Maker choice'].tolist()
#Maker_el = rslt_elgear['Maker choice'].tolist()
#Maker_safety = rslt_safety['Maker choice'].tolist()
#Maker_exh = rslt_exh_valve['Maker choice'].tolist()

hps_gear = ['HPS gear driven']
hps_ths2 = ['HPS gear driven - THS2']
hps_el = ['HPS el driven']

list_of_HPS_types = ['HPS gear driven','HPS gear driven - THS2','HPS el driven']

#list_of_HPS_rows = [Maker_gear, Maker_ths, Maker_el]

#Groups by column for group, if it has at least 1 item
groups_parts = df.groupby(['Group', 'Category'])
groupsList = []
groupGroup = []

#for name, group in groups_parts:
 #   print("Group: ", name)
  #  print("-" * 27)
   # print(group, end="\n\n")
    #print("-" * 27)
    #print("Name of group ", name[1])
    #groupsList.append(name[1])
    #groupGroup.append(group)

print("group name: ", groupsList)

groupby_regiment = df['Maker choice'].groupby(df['Category'])

#print("groupMakers name: ", groupMakers)

listGRoupmakers = df['Maker choice'].groupby(df['Group']).apply(list).reset_index(name='Brands')

listMakers = listGRoupmakers['Brands'].tolist()
print("listMakers", listMakers)

#GUI

from tkinter import *
import tkinter as tk
from tkinter import ttk

root = tk.Tk()
root.title("Hydraulics GUI")

#categories = ['ME-Filter','HPS','Safety / akkumulator block','HCU / Exhaust valve type']
categories = df['Category'].unique().tolist()

for (i, item) in enumerate(categories):
    if "HPS" in item:
        categories[i] = "HPS"

categories = pd.DataFrame(categories, columns =['Category'])
categories = categories['Category'].unique().tolist()


FilterVar= tk.StringVar()
GearVar= tk.StringVar()
thsVar= tk.StringVar()
elVar= tk.StringVar()
safetyVar= tk.StringVar()
exhVar= tk.StringVar()

#Dictionary to dynamically declare variables

d={}
listVariableNames = []
listVariables = []
XVariables = []
for x in range(len(listMakers)):
        d["Var{0}".format(x)] = tk.StringVar()
        XVariables.append(d)

print("XVariables", XVariables)
print("d", d)

for key, value in d.items():
        temp = [key, value]
        listVariableNames.append(temp[0])
        listVariables.append(temp[1])

print("listVariableNames", listVariableNames)

print(str(listVariableNames))

print("listVariables", listVariables)
#list_ofLists = [Maker_filter, Maker_gear, Maker_ths, Maker_el, Maker_safety, Maker_exh, Maker_exh]
list_variables = [FilterVar, GearVar, thsVar, elVar, safetyVar, exhVar,exhVar]
print("list_variables", list_variables)

def clickFilters():
    listVariables[0].get()

r = 0
answers = []
for c in categories:
    ttk.Label(text=c, relief=tk.RIDGE, width=15).grid(row=r,column=0)
    categoriesParts = ttk.Combobox(root, textvariable = listVariables[r], values=listMakers[r],width=10, state="readonly").grid(row=r,column=1)
    r = r + 1

#PDFs: read selection from answers, then look what file nr it is and look for that in directory

def merge_pdfs():
    for x in range(len(listMakers)):
        answers.append(listVariables[x].get())
    #answers.append(listVariables[1].get())
    #answers.append(listVariables[2].get())
    #answers.append(listVariables[3].get())
    #answers.append(listVariables[4].get())
    #answers.append(listVariables[5].get())
    #answers.append(listVariables[6].get())
    #answers.append(FilterVar.get())
    print(answers)
    answers.clear()

browseButton_Excel = tk.Button(text='Print Config', command=merge_pdfs, bg='green', fg='white')
browseButton_Excel.grid(column=2, row=50)

answers.clear()

mainloop()
